PriorityQueue Demo
==================

Created a new priority queue: Empty Queue

1. Adding elements with different priorities:
Queue after adding elements: PriorityQueue: [200:5] -> [100:3] -> [300:1]
Top element: 200 with weight: 5

2. Using operator overloads:
After adding 400 with weight 7: PriorityQueue: [400:7] -> [200:5] -> [100:3] -> [300:1]
Position of value 200: 1
Position of value 999 (not in queue): -1
After updating value with weight 5: PriorityQueue: [400:7] -> [250:5] -> [100:3] -> [300:1]

3. Creating a copy using copy constructor:
Original: PriorityQueue: [400:7] -> [250:5] -> [100:3] -> [300:1]
Copy: PriorityQueue: [400:7] -> [250:5] -> [100:3] -> [300:1]

4. Using assignment operator:
Queue 3 before assignment: PriorityQueue: [600:4] -> [500:2]
Queue 3 after assignment: PriorityQueue: [400:7] -> [250:5] -> [100:3] -> [300:1]

5. Comparing queues:
pq1 == pq2: true
pq1 == pq3: true
After popping from pq2: PriorityQueue: [250:5] -> [100:3] -> [300:1]
pq1 == pq2: false
pq1 > pq2: true

6. Popping elements from the queue:
Original queue: PriorityQueue: [400:7] -> [250:5] -> [100:3] -> [300:1]
Popping: 400
Queue: PriorityQueue: [250:5] -> [100:3] -> [300:1]
Popping: 250
Queue: PriorityQueue: [100:3] -> [300:1]
Popping: 100
Queue: PriorityQueue: [300:1]
Popping: 300
Queue: Empty Queue

7. Using ! operator to clear the queue:
Queue 2 before clearing: PriorityQueue: [250:5] -> [100:3] -> [300:1]
Queue 2 after clearing: Empty Queue

8. Working with an array of queues:
Queue 0: PriorityQueue: [0:3] -> [1:2] -> [2:1]
Queue 1: PriorityQueue: [10:3] -> [11:2] -> [12:1]
Queue 2: PriorityQueue: [20:3] -> [21:2] -> [22:1]
